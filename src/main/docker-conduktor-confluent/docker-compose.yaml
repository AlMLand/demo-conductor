version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    hostname: zoo
    container_name: zoo
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo:2888:3888

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    hostname: kafka-server
    container_name: kafka-server
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
      - "9999:9999"
    environment:
#     https://www.confluent.io/blog/kafka-listeners-explained/?utm_medium=sem&utm_source=google&utm_campaign=ch.sem_br.nonbrand_tp.prs_tgt.dsa_mt.dsa_rgn.emea_lng.eng_dv.all_con.blog&utm_term=&creative=&device=c&placement=&gclid=Cj0KCQiAofieBhDXARIsAHTTldoBSesRXnATrO-fKsf6dLiONWlJ6zW1qbquOuQ53KduDjSVgiSwtFAaAjUxEALw_wcB
#     from server.properties
#     kafka brokers communicate between themselves, usually on the internal network (e.g., Docker network, AWS VPC, etc.)
#     to define which listener to use, specify KAFKA_INTER_BROKER_LISTENER_NAME
#     when connecting to a broker, the listener that will be returned to the client will be the listener to which you connected (based on the port)
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9001
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"

  conduktor-platform:
    image: conduktor/conduktor-platform:latest
    container_name: conduktor
    ports:
      - "8080:8080"
    depends_on:
      - kafka
    volumes:
      - conduktor_data:/var/conduktor
      - type: bind
        source: "./platform-config.yaml"
        target: /opt/conduktor/platform-config.yaml
        read_only: true
    environment:
      CDK_IN_CONF_FILE: /opt/conduktor/platform-config.yaml
      KAFKA_BOOTSTRAP_SERVER: PLAINTEXT://kafka:19092
      ORGANISATION_NAME: "default"
      ADMIN_EMAIL: "admin@admin.io"
      ADMIN_PSW: "admin"

volumes:
  conduktor_data: {}